<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Life hacker, life's easier]]></title><description><![CDATA[It's much easier than you think to live the life you want ...]]></description><link>http://locnh.com</link><generator>RSS for Node</generator><lastBuildDate>Sun, 31 Mar 2019 04:17:20 GMT</lastBuildDate><atom:link href="http://locnh.com/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Have fun with CloudFlare Slack Bot]]></title><description><![CDATA[<div class="sect1">
<h2 id="_what_is_it">What is it ?</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>It&#8217;s a <code>Slack</code> bot was written in <code>Go</code> to help users interact with <code>CloudFlare</code>, eg clear <code>cloudflare cache</code> via <code>slack chat</code>.</p>
</li>
<li>
<p>It has pre-compiled binaries and <code>Docker</code> built, so it&#8217;s very ez to rock.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_let_the_fun_begin">Let the fun begin</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Github: <a href="https://github.com/locnh/cloudflare-slackbot" class="bare">https://github.com/locnh/cloudflare-slackbot</a></p>
</li>
<li>
<p>Dockerhub: <a href="https://hub.docker.com/r/locnh/cloudflare-slackbot" class="bare">https://hub.docker.com/r/locnh/cloudflare-slackbot</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_contribute">Contribute</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Fork it on github</p>
</li>
<li>
<p>Make some changes</p>
</li>
<li>
<p>Create pull request</p>
</li>
<li>
<p>Grab a coffee</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_screenshot">Screenshot</h2>
<div class="sectionbody">
<div class="imageblock">
<div class="content">
<img src="https://raw.githubusercontent.com/locnh/cloudflare-slackbot/master/screenshot.png" alt="Screenshot">
</div>
</div>
</div>
</div>]]></description><link>http://locnh.com/2016/09/11/Have-fun-with-Cloud-Flare-Slack-Bot.html</link><guid isPermaLink="true">http://locnh.com/2016/09/11/Have-fun-with-Cloud-Flare-Slack-Bot.html</guid><category><![CDATA[Docker]]></category><category><![CDATA[CloudFlare]]></category><category><![CDATA[Slack]]></category><category><![CDATA[Go]]></category><dc:creator><![CDATA[Loc Nguyen]]></dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[The easiest way to run PokemonGo-Bot with Docker]]></title><description><![CDATA[<div class="sect1">
<h2 id="_what_am_i_gonna_do">What am I gonna do ?</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>How to setup <a href="https://github.com/PokemonGoF/PokemonGo-Bot">PokemonGo-Bot</a> of <a href="https://github.com/PokemonGoF">PokemonGoF Team</a> with WebUI in a few minutes.</p>
</li>
<li>
<p>In this guide, I&#8217;m gonna use <code>dev</code> branch for newest features. For <code>stable</code> version (<code>master</code> branch), it&#8217;s more easier.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_why_docker">Why Docker ?</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Cross-platform: No matter what OS you&#8217;re using is Linux, Windows or Mac.</p>
</li>
<li>
<p>Prebuild with all the things we need.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_preparation">Preparation</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Download and install docker from <a href="https://www.docker.com/" class="bare">https://www.docker.com/</a></p>
</li>
<li>
<p>Make sure you share the partitions / drivers which will store the PokemonGo-Bot with the Docker.</p>
</li>
<li>
<p>Download and install <code>git</code>, please use google "How to install git on Windows". I think Mac and Linux guys already know how to install git, and docker also.</p>
</li>
<li>
<p>Google Map API keys: 1 for browser, 1 for server. Get them <a href="https://developers.google.com/maps/documentation/javascript/get-api-key">here</a> for free.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_here_we_go">Here we go</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Open the powershell or terminal to clone <code>PokemonGo-Bot</code> source code, we&#8217;re cloning branch <code>dev</code>, not <code>master</code>.</p>
<div class="literalblock">
<div class="content">
<pre>$ git clone --recursive -b dev https://github.com/PokemonGoF/PokemonGo-Bot
$ cd PokemonGo-Bot</pre>
</div>
</div>
</li>
<li>
<p>Edit your configurations:</p>
<div class="ulist">
<ul>
<li>
<p>config/config.json</p>
</li>
<li>
<p>web/config/userdata.json</p>
</li>
</ul>
</div>
</li>
<li>
<p>Edit the <code>docker-compose.yml</code> file, at this time when I&#8217;m making this guide, my <code>docker-compose.yml</code> is a bit different from the original file in the repo. I&#8217;m gonna push to my own repo and make a PR soon.</p>
<div class="literalblock">
<div class="content">
<pre>version: '2'
services:
  bot1-pokego:
    image: svlentink/pokemongo-bot
    volumes:
     - ./configs:/usr/src/app/configs
     - ./web:/usr/src/app/web
    stdin_open: true
    tty: true
  bot1-pokegoweb:
    image: nginx
    ports:
     - "8000:80"
    volumes:
      - ./web:/usr/share/nginx/html
    depends_on:
     - bot1-pokego</pre>
</div>
</div>
</li>
<li>
<p>Let <code>docker-compose</code> do the rest</p>
<div class="literalblock">
<div class="content">
<pre>$ docker-compose up</pre>
</div>
</div>
</li>
<li>
<p>Grab a coffee and see your bot&#8217;s status via <code><a href="http://localhost:8000" class="bare">http://localhost:8000</a></code></p>
</li>
<li>
<p>Easy and sexy enough ?? If <code>yes</code>, please share with people who needs help.</p>
</li>
<li>
<p>In case you need <code>stable</code> version, replace: <code>svlentink/pokemongo-bot</code> with <code>svlentink/pokemongo-bot:stable</code> in the <code>docker-compose.yml</code></p>
</li>
</ul>
</div>
</div>
</div>]]></description><link>http://locnh.com/2016/08/18/The-easiest-way-to-run-Pokemon-Go-Bot-with-Docker.html</link><guid isPermaLink="true">http://locnh.com/2016/08/18/The-easiest-way-to-run-Pokemon-Go-Bot-with-Docker.html</guid><category><![CDATA[Docker]]></category><category><![CDATA[Pokemon GO]]></category><category><![CDATA[PokemonGO-Bot]]></category><dc:creator><![CDATA[Loc Nguyen]]></dc:creator><pubDate>Thu, 18 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Best practices for setting up Docker on Ubuntu Dev machine]]></title><description><![CDATA[<div class="sect2">
<h3 id="_install_docker">Install Docker</h3>
<div class="ulist">
<ul>
<li>
<p>Run this command to install Docker in one shot:</p>
<div class="literalblock">
<div class="content">
<pre>$ curl https://get.docker.com/ | sudo sh</pre>
</div>
</div>
</li>
<li>
<p>Run this command to add your user to <code>docker group</code>, so you don&#8217;t need to use <code>sudo</code> or <code>root</code> to communicate with <code>docker</code>:</p>
<div class="literalblock">
<div class="content">
<pre>$ sudo usermod -aG docker `whoami`</pre>
</div>
</div>
</li>
<li>
<p>Then <code>Log out</code> and <code>Log in</code> again. You&#8217;re now ready to do some hacks with docker !</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_configure_local_dns">Configure local DNS</h3>
<div class="ulist">
<ul>
<li>
<p>Why do we need to do this ?</p>
<div class="ulist">
<ul>
<li>
<p>Trust me, you don&#8217;t need to manually modify <code>/etc/hosts</code>, <strong>time by time</strong>.</p>
</li>
<li>
<p>Ubuntu was installed with <code>dnsmasq</code> for dns caching, and it&#8217;s a good idea to use it for <code>*.docker</code> ( or <code>*.local</code>, whatever) resolving.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Okay, let&#8217;s do a trick:</p>
<div class="ulist">
<ul>
<li>
<p>Add a wild-card record at the end of <code>dnsmasq.conf</code></p>
<div class="literalblock">
<div class="content">
<pre>$ echo "address=/.docker/127.0.0.1" | sudo tee -a /etc/dnsmasq.conf</pre>
</div>
</div>
</li>
<li>
<p>Then restart dns service</p>
<div class="literalblock">
<div class="content">
<pre>$ sudo service dnsmasq restart</pre>
</div>
</div>
</li>
<li>
<p>Make a test with ping</p>
<div class="literalblock">
<div class="content">
<pre>$ ping whatever.docker</pre>
</div>
</div>
</li>
<li>
<p>If you get something like this, it works</p>
<div class="literalblock">
<div class="content">
<pre>64 bytes from 127.0.0.1: icmp_seq=0 ttl=52 time=0 ms</pre>
</div>
</div>
</li>
<li>
<p>Now all domains <code>*.docker</code> will point to <code>127.0.0.1</code>, no editing <code>/etc/hosts</code> anymore.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_make_a_docker_container_for_code_database_service_code">Make a docker container for <code>database service</code></h3>
<div class="ulist">
<ul>
<li>
<p>With <code>datadir</code> mounted from physical host</p>
</li>
<li>
<p>Give other <code>application containers</code> links to this <code>database container</code></p>
</li>
<li>
<p>Why do we need to do this ?</p>
<div class="ulist">
<ul>
<li>
<p>Each time container restart, it will be assigned a new IP by <code>docker-engine</code> (the minimal number being available),  giving container name and use <code>--link</code> is a wisely choice.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Create a database container using percona image:</p>
<div class="literalblock">
<div class="content">
<pre>$ docker run --name datanode -d -v /var/lib/mysql:/var/lib/mysql -p 3306:3306 percona</pre>
</div>
</div>
</li>
<li>
<p>Create a web server container and link with <code>datanode</code>, I use magento, so the command will be:</p>
<div class="literalblock">
<div class="content">
<pre>$ docker run --name webnode -d -v /var/www/sourcode:/var/www/html -p 80:80 --link datanode locnh/docker-magento</pre>
</div>
</div>
</li>
<li>
<p>Now from <code>webnode</code> can reach <code>datanode</code> by using hostname <code>datanode</code> instead of IP</p>
<div class="literalblock">
<div class="content">
<pre>$ docker exec webnode cat /etc/hosts</pre>
</div>
</div>
</li>
</ul>
</div>
<div class="paragraph">
<p>Easy enough ?</p>
</div>
</div>]]></description><link>http://locnh.com/2016/07/16/Best-practices-for-setting-up-Docker-on-Ubuntu-Dev-machine.html</link><guid isPermaLink="true">http://locnh.com/2016/07/16/Best-practices-for-setting-up-Docker-on-Ubuntu-Dev-machine.html</guid><category><![CDATA[Docker]]></category><category><![CDATA[Magento]]></category><category><![CDATA[DevOps]]></category><dc:creator><![CDATA[Loc Nguyen]]></dc:creator><pubDate>Sat, 16 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Docker for Magento, how to prepare develop environment in 10 senconds]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>As a developer, preparing dev environment  is painful, it&#8217;s nowadays really a nightmare when we need to mix a lot of technologies, platforms, softwares&#8217;s versions. So, let&#8217;s make life easier with Docker !</p>
</div>
<iframe src="//slides.com/locnh/docker-for-dev/embed" width="576" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
</div>
</div>
<div class="sect2">
<h3 id="_references">References</h3>
<div class="paragraph">
<p><a href="http://slides.com/locnh/docker-for-dev/fullscreen">Slides</a>, <a href="https://hub.docker.com/r/locnh/docker-magento">Dockerhub</a>, <a href="https://github.com/locnh/docker-magento">Github</a></p>
</div>
</div>]]></description><link>http://locnh.com/2016/06/29/Docker-for-Magento-how-to-prepare-develop-environment-in-10-senconds.html</link><guid isPermaLink="true">http://locnh.com/2016/06/29/Docker-for-Magento-how-to-prepare-develop-environment-in-10-senconds.html</guid><category><![CDATA[Docker]]></category><category><![CDATA[Magento]]></category><category><![CDATA[DevOps]]></category><dc:creator><![CDATA[Loc Nguyen]]></dc:creator><pubDate>Wed, 29 Jun 2016 00:00:00 GMT</pubDate></item></channel></rss>